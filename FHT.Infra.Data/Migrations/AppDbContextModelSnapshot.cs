// <auto-generated />
using System;
using FHT.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FHT.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FHT.Domain.Entities.Auditoria", b =>
                {
                    b.Property<long>("AuditoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("AUDITORIA_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AuditoriaId"));

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ACAO");

                    b.Property<string>("CorrelacaoId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("CORRELACAO_ID");

                    b.Property<string>("DadosAntes")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DADOS_ANTES");

                    b.Property<string>("DadosDepois")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DADOS_DEPOIS");

                    b.Property<DateTimeOffset>("DataEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_EVENTO")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<DateTimeOffset>("DataInsercao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_INSERCAO")
                        .HasDefaultValueSql("SYSDATETIMEOFFSET()");

                    b.Property<string>("Entidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ENTIDADE");

                    b.Property<string>("EntidadeId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("ENTIDADE_ID");

                    b.Property<string>("ErroMsg")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ERRO_MSG");

                    b.Property<string>("Motivo")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("MOTIVO");

                    b.Property<string>("OrigemIp")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)")
                        .HasColumnName("ORIGEM_IP");

                    b.Property<string>("SessionId")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("SESSION_ID");

                    b.Property<bool>("Sucesso")
                        .HasColumnType("bit")
                        .HasColumnName("SUCESSO");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)")
                        .HasColumnName("USER_AGENT");

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint")
                        .HasColumnName("USUARIO_ID");

                    b.Property<string>("UsuarioLogin")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("USUARIO_LOGIN");

                    b.HasKey("AuditoriaId")
                        .HasName("PK_AUDITORIA");

                    b.HasIndex("CorrelacaoId")
                        .HasDatabaseName("IX_AUD_COR");

                    b.HasIndex("DataEvento")
                        .HasDatabaseName("IX_AUD_DATA");

                    b.HasIndex("UsuarioLogin")
                        .HasDatabaseName("IX_AUD_USR");

                    b.HasIndex("Entidade", "EntidadeId")
                        .HasDatabaseName("IX_AUD_ENT");

                    b.ToTable("AUDITORIA", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Cliente", b =>
                {
                    b.Property<long>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ClienteId"));

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal?>("Saldo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("SALDO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("STATUS_CLIENTE");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPO_CLIENTE");

                    b.HasKey("ClienteId")
                        .HasName("PK_CLIENTE");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_CLIENTE_NOME");

                    b.HasIndex("Status", "Tipo")
                        .HasDatabaseName("IX_CLIENTE_STATUS_TIPO");

                    b.ToTable("CLIENTE", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Cobranca", b =>
                {
                    b.Property<long>("CobrancaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("COBRANCA_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("CobrancaId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("CODIGO_BARRAS");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTimeOffset>("DataEmissao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_EMISSAO");

                    b.Property<DateTimeOffset?>("DataPagamento")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_PAGAMENTO");

                    b.Property<DateTimeOffset?>("DataVencimento")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_VENCIMENTO");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("DESCONTO");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("Gateway")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("GATEWAY");

                    b.Property<string>("IdentificadorTransacao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ID_TRANSACAO");

                    b.Property<decimal?>("Juros")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("JUROS");

                    b.Property<string>("LinhaDigitavel")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("LINHA_DIGITAVEL");

                    b.Property<string>("Metadados")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("METADADOS");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("METODO");

                    b.Property<decimal?>("Multa")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("MULTA");

                    b.Property<string>("NossoNumero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NOSSO_NUMERO");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit")
                        .HasColumnName("PAGO");

                    b.Property<string>("PixChave")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("PIX_CHAVE");

                    b.Property<string>("PixTxId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PIX_TXID");

                    b.Property<string>("ReferenciaExterna")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("REFERENCIA_EXTERNA");

                    b.Property<string>("Situacao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SITUACAO");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PAGO");

                    b.HasKey("CobrancaId")
                        .HasName("PK_COBRANCA");

                    b.HasIndex("DataVencimento")
                        .HasDatabaseName("IX_COB_VENC");

                    b.HasIndex("ReferenciaExterna")
                        .HasDatabaseName("IX_COB_REF_EXT");

                    b.HasIndex("ClienteId", "Metodo")
                        .HasDatabaseName("IX_COB_CLIENTE_METODO");

                    b.HasIndex("Situacao", "Pago")
                        .HasDatabaseName("IX_COB_SITUACAO_PAGO");

                    b.ToTable("COBRANCA", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Compliance", b =>
                {
                    b.Property<long>("ComplianceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("COMPLIANCE_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ComplianceId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset?>("DataAnalise")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ANALISE");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTimeOffset?>("DataExpiracao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_EXPIRACAO");

                    b.Property<string>("FonteAnalise")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("FONTE_ANALISE");

                    b.Property<string>("NivelRisco")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("NIVEL_RISCO");

                    b.Property<string>("Observacao")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<bool>("PessoaPoliticamenteExposto")
                        .HasColumnType("bit")
                        .HasColumnName("PESSOA_POLITICAMENTE_EXPOSTA");

                    b.Property<bool>("PossuiRestricaoSancoes")
                        .HasColumnType("bit")
                        .HasColumnName("RESTRICAO_SANCOES");

                    b.Property<string>("StatusKyc")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("STATUS_KYC");

                    b.HasKey("ComplianceId")
                        .HasName("PK_COMPLIANCE");

                    b.HasIndex("ClienteId", "StatusKyc", "NivelRisco")
                        .HasDatabaseName("IX_COMPLIANCE_CLIENTE_STATUS_RISCO");

                    b.ToTable("COMPLIANCE", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Comprovante", b =>
                {
                    b.Property<long>("ComprovanteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("COMPROVANTE_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ComprovanteId"));

                    b.Property<byte[]>("Arquivo")
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("ARQUIVO");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<long>("CobrancaId")
                        .HasColumnType("bigint")
                        .HasColumnName("COBRANCA_ID");

                    b.Property<DateTimeOffset>("DataGeracao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_GERACAO");

                    b.Property<DateTimeOffset>("DataPagamento")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_PAGAMENTO");

                    b.Property<string>("Emissor")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("EMISSOR");

                    b.Property<string>("Hash")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)")
                        .HasColumnName("HASH");

                    b.Property<string>("IdentificadorTransacao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ID_TRANSACAO");

                    b.Property<string>("Metodo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("METODO");

                    b.Property<string>("MimeType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MIME_TYPE");

                    b.Property<string>("NumeroAutenticacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("NUM_AUTENTICACAO");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("OBSERVACOES");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit")
                        .HasColumnName("PAGO");

                    b.Property<string>("Protocolo")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PROTOCOLO");

                    b.Property<string>("SituacaoNoMomento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("SITUACAO_MOMENTO");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR_PAGO");

                    b.HasKey("ComprovanteId")
                        .HasName("PK_COMPROVANTE");

                    b.HasIndex("CobrancaId")
                        .IsUnique()
                        .HasDatabaseName("UX_COMPROVANTE_COBRANCA");

                    b.HasIndex("IdentificadorTransacao")
                        .HasDatabaseName("IX_COMP_IDTRANS");

                    b.HasIndex("NumeroAutenticacao")
                        .HasDatabaseName("IX_COMP_AUTENTICACAO");

                    b.HasIndex("ClienteId", "DataPagamento")
                        .HasDatabaseName("IX_COMP_CLIENTE_PAGTO");

                    b.ToTable("COMPROVANTE", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Conta", b =>
                {
                    b.Property<long>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CONTA_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContaId"));

                    b.Property<string>("Agencia")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("AGENCIA");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset>("DataAbertura")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ABERTURA");

                    b.Property<DateTimeOffset?>("DataEncerramento")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ENCERRAMENTO");

                    b.Property<string>("Digito")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("DIGITO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NUMERO");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("SALDO");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("STATUS_CONTA");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPO_CONTA");

                    b.HasKey("ContaId")
                        .HasName("PK_CONTA");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("IX_CONTA_CLIENTE");

                    b.HasIndex("Agencia", "Numero", "Digito")
                        .IsUnique()
                        .HasDatabaseName("UX_CONTA_BANCO")
                        .HasFilter("[DIGITO] IS NOT NULL");

                    b.ToTable("CONTA", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Contato", b =>
                {
                    b.Property<long>("ContatoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("CONTATO_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ContatoId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Observacao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("OBSERVACAO");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPO");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("VALOR");

                    b.HasKey("ContatoId")
                        .HasName("PK_CONTATO");

                    b.HasIndex("ClienteId", "Tipo", "Principal")
                        .HasDatabaseName("IX_CONTATO_CLIENTE_TIPO_PRINC");

                    b.ToTable("CONTATO", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.DadoPessoal", b =>
                {
                    b.Property<long>("DadoPessoalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("DADO_PESSOAL_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DadoPessoalId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTimeOffset?>("DataNascimento")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_NASCIMENTO");

                    b.Property<string>("EstadoCivil")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ESTADO_CIVIL");

                    b.Property<string>("Genero")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("GENERO");

                    b.Property<string>("Nacionalidade")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("NACIONALIDADE");

                    b.Property<string>("NomeMae")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME_MAE");

                    b.Property<string>("NomePai")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME_PAI");

                    b.Property<string>("NomeSocial")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME_SOCIAL");

                    b.Property<string>("Profissao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("PROFISSAO");

                    b.Property<decimal?>("RendaMensal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("RENDA_MENSAL");

                    b.HasKey("DadoPessoalId")
                        .HasName("PK_DADO_PESSOAL");

                    b.HasIndex("ClienteId")
                        .IsUnique()
                        .HasDatabaseName("UX_DADO_PESSOAL_CLIENTE");

                    b.ToTable("DADO_PESSOAL", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.DocumentoFiscal", b =>
                {
                    b.Property<long>("DocumentoFiscalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("DOCUMENTO_FISCAL_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("DocumentoFiscalId"));

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTimeOffset?>("DataEmissao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_EMISSAO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("OrgaoEmissor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("ORGAO_EMISSOR");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPO_DOCUMENTO");

                    b.Property<string>("UfEmissor")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("UF_EMISSOR");

                    b.Property<DateTimeOffset?>("Validade")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_VALIDADE");

                    b.HasKey("DocumentoFiscalId")
                        .HasName("PK_DOCUMENTO_FISCAL");

                    b.HasIndex("ClienteId", "Tipo", "Numero")
                        .IsUnique()
                        .HasDatabaseName("UX_DOCFISCAL_CLIENTE_TIPO_NUMERO");

                    b.ToTable("DOCUMENTO_FISCAL", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.EnderecoFiscal", b =>
                {
                    b.Property<long>("EnderecoFiscalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ENDERECO_FISCAL_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("EnderecoFiscalId"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("CEP");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<string>("CodigoIbgeMunicipio")
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)")
                        .HasColumnName("CODIGO_IBGE_MUNICIPIO");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("COMPLEMENTO");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("MUNICIPIO");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Pais")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("PAIS");

                    b.Property<bool>("Principal")
                        .HasColumnType("bit")
                        .HasColumnName("PRINCIPAL");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("TIPO_ENDERECO");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("UF");

                    b.HasKey("EnderecoFiscalId")
                        .HasName("PK_ENDERECO_FISCAL");

                    b.HasIndex("ClienteId", "Tipo", "Principal")
                        .HasDatabaseName("IX_END_FISCAL_CLIENTE_TIPO_PRINC");

                    b.ToTable("ENDERECO_FISCAL", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Societario", b =>
                {
                    b.Property<long>("SocietarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("SOCIETARIO_ID")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SocietarioId"));

                    b.Property<string>("CargoFuncao")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("CARGO_FUNCAO");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<DateTimeOffset>("DataAtualizacao")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTimeOffset>("DataCadastro")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<DateTimeOffset?>("DataEntrada")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_ENTRADA");

                    b.Property<DateTimeOffset?>("DataSaida")
                        .HasColumnType("datetimeoffset(6)")
                        .HasColumnName("DATA_SAIDA");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal?>("ParticipacaoPercentual")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PARTICIPACAO_PERCENTUAL");

                    b.Property<bool>("RepresentanteLegal")
                        .HasColumnType("bit")
                        .HasColumnName("REPRESENTANTE_LEGAL");

                    b.HasKey("SocietarioId")
                        .HasName("PK_SOCIETARIO");

                    b.HasIndex("ClienteId")
                        .HasDatabaseName("IX_SOCIETARIO_CLIENTE");

                    b.ToTable("SOCIETARIO", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.TransferenciaBancaria", b =>
                {
                    b.Property<long>("TransferenciaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("TRANSFERENCIA_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TransferenciaId"));

                    b.Property<string>("AgenciaDestino")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AGENCIA_DESTINO");

                    b.Property<string>("BancoDestino")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("BANCO_DESTINO");

                    b.Property<long>("ClienteId")
                        .HasColumnType("bigint")
                        .HasColumnName("CLIENTE_ID");

                    b.Property<string>("CodigoBarras")
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)")
                        .HasColumnName("CODIGO_BARRAS");

                    b.Property<string>("ContaDestino")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("CONTA_DESTINO");

                    b.Property<long>("ContaId")
                        .HasColumnType("bigint")
                        .HasColumnName("CONTA_ID");

                    b.Property<DateTime?>("DataConclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_CONC");

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2")
                        .HasColumnName("DATA_SOL");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("DESCRICAO");

                    b.Property<string>("DocumentoTitularDestino")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("DOC_TITULAR_DEST");

                    b.Property<string>("IdentificadorTransacao")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("ID_TRANSACAO");

                    b.Property<string>("LinhaDigitavel")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)")
                        .HasColumnName("LINHA_DIGITAVEL");

                    b.Property<string>("MensagemErro")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("MSG_ERRO");

                    b.Property<string>("NomeTitularDestino")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("NOME_TITULAR_DEST");

                    b.Property<string>("PixChave")
                        .HasMaxLength(140)
                        .HasColumnType("nvarchar(140)")
                        .HasColumnName("PIX_CHAVE");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)")
                        .HasColumnName("TIPO");

                    b.Property<decimal>("Valor")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("TransferenciaId")
                        .HasName("PK_TRANSFERENCIA");

                    b.HasIndex("ContaId");

                    b.HasIndex("ClienteId", "ContaId", "DataSolicitacao")
                        .HasDatabaseName("IX_TRANSF_CLIENTE_CONTA_DATA");

                    b.ToTable("TRANSFERENCIA", (string)null);
                });

            modelBuilder.Entity("FHT.Domain.Entities.Cobranca", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_COBRANCA_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Compliance", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Compliance")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_COMPLIANCE_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Comprovante", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_COMPROVANTE_CLIENTE");

                    b.HasOne("FHT.Domain.Entities.Cobranca", "Cobranca")
                        .WithOne()
                        .HasForeignKey("FHT.Domain.Entities.Comprovante", "CobrancaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_COMPROVANTE_COBRANCA");

                    b.Navigation("Cliente");

                    b.Navigation("Cobranca");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Conta", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Contas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_CONTA_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Contato", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Contato")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_CONTATO_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.DadoPessoal", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithOne("DadosPessoais")
                        .HasForeignKey("FHT.Domain.Entities.DadoPessoal", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DADO_PESSOAL_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.DocumentoFiscal", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("DocumentosFiscais")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DOCUMENTO_FISCAL_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.EnderecoFiscal", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Endereco")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ENDERECO_FISCAL_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Societario", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany("Societario")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SOCIETARIO_CLIENTE");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("FHT.Domain.Entities.TransferenciaBancaria", b =>
                {
                    b.HasOne("FHT.Domain.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TRANSFERENCIA_CLIENTE");

                    b.HasOne("FHT.Domain.Entities.Conta", "Conta")
                        .WithMany()
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TRANSFERENCIA_CONTA");

                    b.Navigation("Cliente");

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("FHT.Domain.Entities.Cliente", b =>
                {
                    b.Navigation("Compliance");

                    b.Navigation("Contas");

                    b.Navigation("Contato");

                    b.Navigation("DadosPessoais");

                    b.Navigation("DocumentosFiscais");

                    b.Navigation("Endereco");

                    b.Navigation("Societario");
                });
#pragma warning restore 612, 618
        }
    }
}
